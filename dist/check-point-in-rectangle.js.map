{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "check-point-in-rectangle.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// check-point-in-rectangle.js\n// check point intersects with rectangle\n// http://martin-thoma.com/how-to-check-if-a-point-is-inside-a-rectangle/\nfunction pointInRect(pt,rect,precision) {\n  var p = precision || 6;\n  var rectArea = 0.5*Math.abs(\n    (rect[0][1] - rect[2][1]) * (rect[3][0] - rect[1][0])\n    + (rect[1][1] - rect[3][1]) * (rect[0][0] - rect[2][0])\n  );\n  var triangleArea = rect.reduce(function(prev,cur, i, arr) {\n    var j = i == arr.length-1 ? 0 : i+1;\n    return prev + 0.5*Math.abs(\n      pt[0] * (arr[i][1] - arr[j][1])\n      + arr[i][0] * (arr[j][1] - pt[1])\n      + arr[j][0] * (pt[1] - arr[i][1])\n    );\n  }, 0);\n  return fix(triangleArea,p) == fix(rectArea,p);\n}\n// fix to the precision\nfunction fix(n,p) {\n  return parseInt(n * Math.pow(10,p));\n};\n\nmodule.exports = pointInRect;\n"
  ]
}